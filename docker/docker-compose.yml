# version: "3.2"
version: "2.1"

services:
  eurekaregistry:
    build:
      context: ../eurekaregistry
      dockerfile: eurekaregistry.Dockerfile
    image: eurekaregistry
    container_name: eurekaregistry
    environment:
      - SPRING_PROFILES_ACTIVE=peer1
      - LOGGING_LEVEL_COM_NETFLIX_DISCOVERY=DEBUG
    expose:
      - 8761
    ports:
      - 8761:8761
    networks:
      - progetto-tasd
    mem_limit: 500M

  gateway:
    build:
      context: ../gateway
      dockerfile: gateway.Dockerfile
    image: gateway
    container_name: gateway
    expose:
      - 8080
    ports:
      - 8080:8080
    networks:
      - progetto-tasd
    depends_on:
      eurekaregistry:
        condition:
          service_started
      auth:
        condition:
          service_started
    restart: on-failure
    mem_limit: 500M

  advisor:
    build:
      context: ../advisor
      dockerfile: advisor.Dockerfile
    image: advisor
    container_name: advisor
    expose:
      - 8700
    ports:
      - 8700:8700
    networks:
      - progetto-tasd
    depends_on:
      eurekaregistry:
        condition:
          service_started
      jobsdb:
        condition:
          service_healthy
    restart: on-failure
    mem_limit: 500M

  authdb:
    image: postgres
    container_name: authdb
    environment:
      - POSTGRES_PASSWORD=1234
    expose:
      - 5432
    ports:
      - 5432:5432
    volumes:
      - authdbdata:/var/lib/postgresql/data
    networks:
      - progetto-tasd
    healthcheck:
      test: "exit 0"
    mem_limit: 250M

  auth:
    build:
      context: ../auth
      dockerfile: auth.Dockerfile
    image: auth
    container_name: auth
    expose:
      - 9100
    ports:
      - 9100:9100
    networks:
      - progetto-tasd
    depends_on:
      authdb:
        condition:
          service_healthy
      eurekaregistry:
        condition:
          service_started
      jobcenters:
        condition:
          service_started
      seekers:
        condition:
          service_started
    restart: on-failure
    mem_limit: 500M

  centersdb:
    image: postgres
    container_name: centersdb
    environment:
      - POSTGRES_PASSWORD=1234
    expose:
      - 5432
    ports:
      - 5433:5432
    volumes:
      - centersdbdata:/var/lib/postgresql/data
    networks:
      - progetto-tasd
    healthcheck:
      test: "exit 0"
    mem_limit: 250M

  jobcenters:
    build:
      context: ../jobcenters
      dockerfile: jobcenters.Dockerfile
    image: jobcenters
    container_name: jobcenters
    expose:
      - 8200
    ports:
      - 8200:8200
    networks:
      - progetto-tasd
    depends_on:
      centersdb:
        condition:
          service_healthy
      eurekaregistry:
        condition:
          service_started
    restart: on-failure
    mem_limit: 500M

  jobsdb:
    image: postgres
    container_name: jobsdb
    environment:
      - POSTGRES_PASSWORD=1234
    expose:
      - 5432
    ports:
      - 5434:5432
    volumes:
      - jobsdbdata:/var/lib/postgresql/data
    networks:
      - progetto-tasd
    healthcheck:
      test: "exit 0"
    mem_limit: 250M

  jobs:
    build:
      context: ../jobs
      dockerfile: jobs.Dockerfile
    image: jobs
    container_name: jobs
    expose:
      - 8400
    ports:
      - 8400:8400
    networks:
      - progetto-tasd
    depends_on:
      jobsdb:
        condition:
          service_healthy
      eurekaregistry:
        condition:
          service_started
    restart: on-failure
    mem_limit: 500M

  search:
    build:
      context: ../search
      dockerfile: search.Dockerfile
    image: search
    container_name: search
    expose:
      - 8500
    ports:
      - 8500:8500
    networks:
      - progetto-tasd
    depends_on:
      jobsdb:
        condition:
          service_healthy
      eurekaregistry:
        condition:
          service_started
    restart: on-failure
    mem_limit: 500M

  seekersdb:
    image: postgres
    container_name: seekersdb
    environment:
      - POSTGRES_PASSWORD=1234
    expose:
      - 5432
    ports:
      - 5435:5432
    volumes:
      - seekersdbdata:/var/lib/postgresql/data
    networks:
      - progetto-tasd
    healthcheck:
      test: "exit 0"
    mem_limit: 250M

  pdfdb:
     image: couchdb
     ports:
        - 5984:5984
     container_name: pdfdb
     environment:
        - COUCHDB_USER=couchdb
        - COUCHDB_PASSWORD=1234
     volumes:
        - pdfdbdata:/opt/couchdb/data
     networks:
        - progetto-tasd
     healthcheck:
       test: "exit 0"
     mem_limit: 250M

  seekers:
    build:
      context: ../seekers
      dockerfile: seekers.Dockerfile
    image: seekers
    container_name: seekers
    expose:
      - 8300
    ports:
      - 8300:8300
    networks:
      - progetto-tasd
    depends_on:
      seekersdb:
        condition:
          service_healthy
      pdfdb:
        condition:
          service_healthy
      eurekaregistry:
        condition:
          service_started
    restart: on-failure
    mem_limit: 500M

  applicationsdb:
    image: postgres
    container_name: applicationsdb
    environment:
      - POSTGRES_PASSWORD=1234
    expose:
      - 5432
    ports:
      - 5437:5432
    volumes:
      - applicationsdbdata:/var/lib/postgresql/data
    networks:
      - progetto-tasd
    healthcheck:
      test: "exit 0"
    mem_limit: 250M

  applications:
    build:
      context: ../applications
      dockerfile: applications.Dockerfile
    image: applications
    container_name: applications
    expose:
      - 8600
    ports:
      - 8600:8600
    networks:
      - progetto-tasd
    depends_on:
      applicationsdb:
        condition:
          service_healthy
      eurekaregistry:
        condition:
          service_started
    restart: on-failure
    mem_limit: 500M

  notification:
    build:
      context: ../notification
      dockerfile: notification.Dockerfile
    image: notification
    container_name: notification
    expose:
      - 8900
      - 8888
    ports:
      - 8900:8900
      - 8888:8888
    networks:
      - progetto-tasd
    depends_on:
      eurekaregistry:
        condition:
          service_started
    restart: on-failure
    mem_limit: 500M

  # webapp:
  #    build:
  #      context: ../webapp
  #      dockerfile: webapp.Dockerfile
  #    image: webapp
  #    container_name: webapp
  #    expose:
  #      - 80
  #    ports:
  #      - 80:80
  #    networks:
  #      - progetto-tasd
  #    depends_on:
  #      gateway:
  #        condition:
  #          service_started
  #      eurekaregistry:
  #        condition:
  #          service_started
  #    restart: on-failure
  #    mem_limit: 500M


  # adminer:
  #   image: adminer
  #   restart: always
  #   expose:
  #     - 8080
  #   networks:
  #     - progetto-tasd

volumes:
  pdfdbdata:
  authdbdata:
  centersdbdata:
  jobsdbdata:
  seekersdbdata:
  applicationsdbdata:

networks:
  progetto-tasd:
    driver: bridge
